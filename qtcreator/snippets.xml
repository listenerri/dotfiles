<?xml version="1.0" encoding="UTF-8"?>
<snippets>
    <snippet group="C++" trigger="bug" id="" complement="BUG(ri): " removed="false" modified="false">// BUG(ri): </snippet>
    <snippet group="C++" trigger="cout" id="" complement="std::cout &lt;&lt; ..." removed="false" modified="false">std::cout &lt;&lt; $var$ &lt;&lt; std::endl$$;</snippet>
    <snippet group="C++" trigger="do" id="cpp_do" complement="" removed="false" modified="true">do {
    $$
} while ($condition$);</snippet>
    <snippet group="C++" trigger="fixme" id="" complement="FIXME(ri): " removed="false" modified="false">// FIXME(ri): </snippet>
    <snippet group="C++" trigger="for" id="cpp_for" complement="" removed="false" modified="true">for (int $var$ = 0; $var$ &lt; $total$; ++$var$) {
    $$
}</snippet>
    <snippet group="C++" trigger="for" id="" complement="const iterator" removed="false" modified="false">for (auto $var$ = $obj$.constBegin(); $var$ != $obj$.constEnd(); ++$var$) {
    $$
}</snippet>
    <snippet group="C++" trigger="for" id="" complement="iterator" removed="false" modified="false">for (auto $var$ = $obj$.begin(); $var$ != $obj$.end(); ++$var$) {
    $$
}</snippet>
    <snippet group="C++" trigger="fore" id="" complement="" removed="false" modified="false">for (auto $var$ : $container$) {
    $$
}</snippet>
    <snippet group="C++" trigger="lambda" id="" complement="[=](x y){}" removed="false" modified="false">[$=$]($type$ $name$) {$body$}</snippet>
    <snippet group="C++" trigger="lambda" id="" complement="[=]{}" removed="false" modified="false">[$=$] {$body$}</snippet>
    <snippet group="C++" trigger="note" id="" complement="NOTE(ri): " removed="false" modified="false">// NOTE(ri): </snippet>
    <snippet group="C++" trigger="qde" id="" complement="qDebug &lt;&lt; &quot;&gt;&gt;&gt;&gt;&quot;" removed="false" modified="false">qDebug() &lt;&lt; &quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;$&gt;$&quot;;$$</snippet>
    <snippet group="C++" trigger="qde" id="" complement="qDebug &lt;&lt; &quot;&gt;&gt;&gt;&gt;&quot; &lt;&lt; something" removed="false" modified="false">qDebug() &lt;&lt; &quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;$&gt;$&quot; &lt;&lt; $Something$;$$</snippet>
    <snippet group="C++" trigger="qde" id="" complement="qDebug &lt;&lt; &quot;something&quot;" removed="false" modified="false">qDebug() &lt;&lt; &quot;$SomeThing$&quot;;$$</snippet>
    <snippet group="C++" trigger="static_cast" id="" complement="static_cast&lt;&gt;()" removed="false" modified="false">static_cast&lt;$type$&gt;($object$);</snippet>
    <snippet group="C++" trigger="struct" id="cpp_genericstruct" complement="" removed="false" modified="true">struct $name$
{
    $name$() {}
};</snippet>
    <snippet group="C++" trigger="todo" id="" complement="TODO(ri): " removed="false" modified="false">// TODO(ri): </snippet>
    <snippet group="C++" trigger="warnning" id="" complement="WARNNING(ri): " removed="false" modified="false">// WARNNING(ri): </snippet>
</snippets>
